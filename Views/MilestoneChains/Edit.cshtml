@model MVCApplicationToDo.Models.MilestoneChain

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>MilestoneChain</h4>
<hr />
<form asp-action="Edit" method="post" class="row">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <div class="form-group col-md-2">
        <label asp-for="Code" class="control-label"></label>
        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
        <span asp-validation-for="Code" class="text-danger"></span>
    </div>
    <div class="form-group col-md-6">
        <label asp-for="Title" class="control-label"></label>
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group col-md-6">
        <br />
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
    
    <table class="table col-md-6">
        <thead>
            <tr>
                <th class="col-md-1 text-center">Step</th>
                <th class="col-md-6 text-center">Valor</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Milestones != null && Model.Milestones.Count > 0)
            {
                for (int i = 0; i < Model.Milestones.Count; i++)
                {
                    <tr>
                        <td class="col-md-2">
                            <div class="form-group">
                                <input type="hidden" name="Milestones[@i].Id" value="@Model.Milestones[i].Id" />
                                <input type="hidden" name="Milestones[@i].Order" value="@i" />
                                <select asp-for="Milestones[@i].MilestoneItemId" class="form-control small-select" asp-items="ViewBag.MilestoneItems">
                                    <option value="">Select</option>
                                </select>
                            </div>
                        </td>
                        <td class="col-md-1">
                            <div class="form-group">
                                <input type="number" name="Milestones[@i].Value" value="@Model.Milestones[i].Value" class="form-control" />
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="3" class="text-center">
                        Nenhum milestone disponível.
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}